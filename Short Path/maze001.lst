;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 18-05-16 09.39.42
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2A8D      	GOTO       653
_right:
;maze001.c,88 :: 		right ()
;maze001.c,90 :: 		do {
L_right34:
;maze001.c,91 :: 		portd = 0b00000100 ;             // right
0x0003	0x3004      	MOVLW      4
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x0088      	MOVWF      PORTD
;maze001.c,92 :: 		delay_ms(10);
0x0007	0x3041      	MOVLW      65
0x0008	0x00FC      	MOVWF      R12
0x0009	0x30EE      	MOVLW      238
0x000A	0x00FD      	MOVWF      R13
L_right37:
0x000B	0x0BFD      	DECFSZ     R13, 1
0x000C	0x280B      	GOTO       L_right37
0x000D	0x0BFC      	DECFSZ     R12, 1
0x000E	0x280B      	GOTO       L_right37
0x000F	0x0000      	NOP
;maze001.c,93 :: 		}while(m==0);
0x0010	0x1D06      	BTFSS      PORTB, 2
0x0011	0x2803      	GOTO       L_right34
;maze001.c,94 :: 		}
L_end_right:
0x0012	0x0008      	RETURN
; end of _right
_done:
;maze001.c,135 :: 		done()
;maze001.c,137 :: 		portd=0;
0x0013	0x1283      	BCF        STATUS, 5
0x0014	0x1303      	BCF        STATUS, 6
0x0015	0x0188      	CLRF       PORTD
;maze001.c,138 :: 		}
L_end_done:
0x0016	0x0008      	RETURN
; end of _done
_left:
;maze001.c,95 :: 		left ()
;maze001.c,97 :: 		do{
L_left38:
;maze001.c,98 :: 		portd=0b00000001 ;              // left
0x0017	0x3001      	MOVLW      1
0x0018	0x1283      	BCF        STATUS, 5
0x0019	0x1303      	BCF        STATUS, 6
0x001A	0x0088      	MOVWF      PORTD
;maze001.c,99 :: 		delay_ms(10);
0x001B	0x3041      	MOVLW      65
0x001C	0x00FC      	MOVWF      R12
0x001D	0x30EE      	MOVLW      238
0x001E	0x00FD      	MOVWF      R13
L_left41:
0x001F	0x0BFD      	DECFSZ     R13, 1
0x0020	0x281F      	GOTO       L_left41
0x0021	0x0BFC      	DECFSZ     R12, 1
0x0022	0x281F      	GOTO       L_left41
0x0023	0x0000      	NOP
;maze001.c,100 :: 		}while(m==0);
0x0024	0x1D06      	BTFSS      PORTB, 2
0x0025	0x2817      	GOTO       L_left38
;maze001.c,101 :: 		}
L_end_left:
0x0026	0x0008      	RETURN
; end of _left
_forward:
;maze001.c,83 :: 		forward()
;maze001.c,85 :: 		portd=0b00000101 ;              // forward
0x0027	0x3005      	MOVLW      5
0x0028	0x1283      	BCF        STATUS, 5
0x0029	0x1303      	BCF        STATUS, 6
0x002A	0x0088      	MOVWF      PORTD
;maze001.c,86 :: 		delay_ms(10);
0x002B	0x3041      	MOVLW      65
0x002C	0x00FC      	MOVWF      R12
0x002D	0x30EE      	MOVLW      238
0x002E	0x00FD      	MOVWF      R13
L_forward33:
0x002F	0x0BFD      	DECFSZ     R13, 1
0x0030	0x282F      	GOTO       L_forward33
0x0031	0x0BFC      	DECFSZ     R12, 1
0x0032	0x282F      	GOTO       L_forward33
0x0033	0x0000      	NOP
;maze001.c,87 :: 		}
L_end_forward:
0x0034	0x0008      	RETURN
; end of _forward
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0035	0x1283      	BCF        STATUS, 5
0x0036	0x1303      	BCF        STATUS, 6
0x0037	0x0857      	MOVF       ___DoICPAddr+1, 0
0x0038	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0039	0x0856      	MOVF       ___DoICPAddr, 0
0x003A	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x003B	0x0008      	RETURN
; end of _____DoICP
_replay:
;maze001.c,181 :: 		replay ()                          // check line and di array both and make a dicision
;maze001.c,184 :: 		while(di[path1=='D'])                      // loop until done
L_replay70:
0x003C	0x3000      	MOVLW      0
0x003D	0x1283      	BCF        STATUS, 5
0x003E	0x1303      	BCF        STATUS, 6
0x003F	0x0621      	XORWF      _path1+1, 0
0x0040	0x1D03      	BTFSS      STATUS, 2
0x0041	0x2844      	GOTO       L__replay123
0x0042	0x3044      	MOVLW      68
0x0043	0x0620      	XORWF      _path1, 0
L__replay123:
0x0044	0x3001      	MOVLW      1
0x0045	0x1D03      	BTFSS      STATUS, 2
0x0046	0x3000      	MOVLW      0
0x0047	0x00F0      	MOVWF      R0
0x0048	0x0870      	MOVF       R0, 0
0x0049	0x3E24      	ADDLW      _di
0x004A	0x0084      	MOVWF      FSR
0x004B	0x0800      	MOVF       INDF, 0
0x004C	0x1903      	BTFSC      STATUS, 2
0x004D	0x28A8      	GOTO       L_replay71
;maze001.c,186 :: 		if ( ll==1&&l==1 &&m==0 && r ==1 && rr ==1 )              // condition        1  1  0  1  1
0x004E	0x1E06      	BTFSS      PORTB, 4
0x004F	0x285A      	GOTO       L_replay74
0x0050	0x1D86      	BTFSS      PORTB, 3
0x0051	0x285A      	GOTO       L_replay74
0x0052	0x1906      	BTFSC      PORTB, 2
0x0053	0x285A      	GOTO       L_replay74
0x0054	0x1C86      	BTFSS      PORTB, 1
0x0055	0x285A      	GOTO       L_replay74
0x0056	0x1C06      	BTFSS      PORTB, 0
0x0057	0x285A      	GOTO       L_replay74
L__replay94:
;maze001.c,188 :: 		forward () ;
0x0058	0x2027      	CALL       _forward
;maze001.c,189 :: 		}
0x0059	0x28A7      	GOTO       L_replay75
L_replay74:
;maze001.c,192 :: 		if(di[path1=='L'])
0x005A	0x3000      	MOVLW      0
0x005B	0x0621      	XORWF      _path1+1, 0
0x005C	0x1D03      	BTFSS      STATUS, 2
0x005D	0x2860      	GOTO       L__replay124
0x005E	0x304C      	MOVLW      76
0x005F	0x0620      	XORWF      _path1, 0
L__replay124:
0x0060	0x3001      	MOVLW      1
0x0061	0x1D03      	BTFSS      STATUS, 2
0x0062	0x3000      	MOVLW      0
0x0063	0x00F0      	MOVWF      R0
0x0064	0x0870      	MOVF       R0, 0
0x0065	0x3E24      	ADDLW      _di
0x0066	0x0084      	MOVWF      FSR
0x0067	0x0800      	MOVF       INDF, 0
0x0068	0x1903      	BTFSC      STATUS, 2
0x0069	0x286E      	GOTO       L_replay76
;maze001.c,194 :: 		left ();
0x006A	0x2017      	CALL       _left
;maze001.c,195 :: 		path1++;
0x006B	0x0AA0      	INCF       _path1, 1
0x006C	0x1903      	BTFSC      STATUS, 2
0x006D	0x0AA1      	INCF       _path1+1, 1
;maze001.c,196 :: 		}
L_replay76:
;maze001.c,197 :: 		if(di[path1=='R'])
0x006E	0x3000      	MOVLW      0
0x006F	0x0621      	XORWF      _path1+1, 0
0x0070	0x1D03      	BTFSS      STATUS, 2
0x0071	0x2874      	GOTO       L__replay125
0x0072	0x3052      	MOVLW      82
0x0073	0x0620      	XORWF      _path1, 0
L__replay125:
0x0074	0x3001      	MOVLW      1
0x0075	0x1D03      	BTFSS      STATUS, 2
0x0076	0x3000      	MOVLW      0
0x0077	0x00F0      	MOVWF      R0
0x0078	0x0870      	MOVF       R0, 0
0x0079	0x3E24      	ADDLW      _di
0x007A	0x0084      	MOVWF      FSR
0x007B	0x0800      	MOVF       INDF, 0
0x007C	0x1903      	BTFSC      STATUS, 2
0x007D	0x2882      	GOTO       L_replay77
;maze001.c,199 :: 		right ();
0x007E	0x2003      	CALL       _right
;maze001.c,200 :: 		path1++;
0x007F	0x0AA0      	INCF       _path1, 1
0x0080	0x1903      	BTFSC      STATUS, 2
0x0081	0x0AA1      	INCF       _path1+1, 1
;maze001.c,201 :: 		}
L_replay77:
;maze001.c,202 :: 		if(di[path1=='S'])
0x0082	0x3000      	MOVLW      0
0x0083	0x0621      	XORWF      _path1+1, 0
0x0084	0x1D03      	BTFSS      STATUS, 2
0x0085	0x2888      	GOTO       L__replay126
0x0086	0x3053      	MOVLW      83
0x0087	0x0620      	XORWF      _path1, 0
L__replay126:
0x0088	0x3001      	MOVLW      1
0x0089	0x1D03      	BTFSS      STATUS, 2
0x008A	0x3000      	MOVLW      0
0x008B	0x00F0      	MOVWF      R0
0x008C	0x0870      	MOVF       R0, 0
0x008D	0x3E24      	ADDLW      _di
0x008E	0x0084      	MOVWF      FSR
0x008F	0x0800      	MOVF       INDF, 0
0x0090	0x1903      	BTFSC      STATUS, 2
0x0091	0x2896      	GOTO       L_replay78
;maze001.c,204 :: 		forward ();
0x0092	0x2027      	CALL       _forward
;maze001.c,205 :: 		path1++;
0x0093	0x0AA0      	INCF       _path1, 1
0x0094	0x1903      	BTFSC      STATUS, 2
0x0095	0x0AA1      	INCF       _path1+1, 1
;maze001.c,206 :: 		}
L_replay78:
;maze001.c,207 :: 		if(di[path1=='D'])
0x0096	0x3000      	MOVLW      0
0x0097	0x0621      	XORWF      _path1+1, 0
0x0098	0x1D03      	BTFSS      STATUS, 2
0x0099	0x289C      	GOTO       L__replay127
0x009A	0x3044      	MOVLW      68
0x009B	0x0620      	XORWF      _path1, 0
L__replay127:
0x009C	0x3001      	MOVLW      1
0x009D	0x1D03      	BTFSS      STATUS, 2
0x009E	0x3000      	MOVLW      0
0x009F	0x00F0      	MOVWF      R0
0x00A0	0x0870      	MOVF       R0, 0
0x00A1	0x3E24      	ADDLW      _di
0x00A2	0x0084      	MOVWF      FSR
0x00A3	0x0800      	MOVF       INDF, 0
0x00A4	0x1903      	BTFSC      STATUS, 2
0x00A5	0x28A7      	GOTO       L_replay79
;maze001.c,209 :: 		done();
0x00A6	0x2013      	CALL       _done
;maze001.c,210 :: 		}
L_replay79:
;maze001.c,211 :: 		}
L_replay75:
;maze001.c,212 :: 		}
0x00A7	0x283C      	GOTO       L_replay70
L_replay71:
;maze001.c,213 :: 		}
L_end_replay:
0x00A8	0x0008      	RETURN
; end of _replay
_short_path:
;maze001.c,140 :: 		short_path()
;maze001.c,142 :: 		int short_done=0;
0x00A9	0x1283      	BCF        STATUS, 5
0x00AA	0x1303      	BCF        STATUS, 6
0x00AB	0x01D8      	CLRF       short_path_short_done_L0
0x00AC	0x01D9      	CLRF       short_path_short_done_L0+1
;maze001.c,143 :: 		if(di[path]-3=='L' && di[path]-1=='R')         //LUR=U
0x00AD	0x0822      	MOVF       _path, 0
0x00AE	0x3E24      	ADDLW      _di
0x00AF	0x0084      	MOVWF      FSR
0x00B0	0x3003      	MOVLW      3
0x00B1	0x0200      	SUBWF      INDF, 0
0x00B2	0x00F1      	MOVWF      R1
0x00B3	0x01F2      	CLRF       R1+1
0x00B4	0x1C03      	BTFSS      STATUS, 0
0x00B5	0x03F2      	DECF       R1+1, 1
0x00B6	0x3000      	MOVLW      0
0x00B7	0x0672      	XORWF      R1+1, 0
0x00B8	0x1D03      	BTFSS      STATUS, 2
0x00B9	0x28BC      	GOTO       L__short_path105
0x00BA	0x304C      	MOVLW      76
0x00BB	0x0671      	XORWF      R1, 0
L__short_path105:
0x00BC	0x1D03      	BTFSS      STATUS, 2
0x00BD	0x28E4      	GOTO       L_short_path54
0x00BE	0x0822      	MOVF       _path, 0
0x00BF	0x3E24      	ADDLW      _di
0x00C0	0x0084      	MOVWF      FSR
0x00C1	0x3001      	MOVLW      1
0x00C2	0x0200      	SUBWF      INDF, 0
0x00C3	0x00F1      	MOVWF      R1
0x00C4	0x01F2      	CLRF       R1+1
0x00C5	0x1C03      	BTFSS      STATUS, 0
0x00C6	0x03F2      	DECF       R1+1, 1
0x00C7	0x3000      	MOVLW      0
0x00C8	0x0672      	XORWF      R1+1, 0
0x00C9	0x1D03      	BTFSS      STATUS, 2
0x00CA	0x28CD      	GOTO       L__short_path106
0x00CB	0x3052      	MOVLW      82
0x00CC	0x0671      	XORWF      R1, 0
L__short_path106:
0x00CD	0x1D03      	BTFSS      STATUS, 2
0x00CE	0x28E4      	GOTO       L_short_path54
L__short_path93:
;maze001.c,145 :: 		path-=3;
0x00CF	0x3003      	MOVLW      3
0x00D0	0x0222      	SUBWF      _path, 0
0x00D1	0x00F0      	MOVWF      R0
0x00D2	0x3000      	MOVLW      0
0x00D3	0x1C03      	BTFSS      STATUS, 0
0x00D4	0x3E01      	ADDLW      1
0x00D5	0x0223      	SUBWF      _path+1, 0
0x00D6	0x00F1      	MOVWF      R0+1
0x00D7	0x0870      	MOVF       R0, 0
0x00D8	0x00A2      	MOVWF      _path
0x00D9	0x0871      	MOVF       R0+1, 0
0x00DA	0x00A3      	MOVWF      _path+1
;maze001.c,146 :: 		di[path]='U';
0x00DB	0x0870      	MOVF       R0, 0
0x00DC	0x3E24      	ADDLW      _di
0x00DD	0x0084      	MOVWF      FSR
0x00DE	0x3055      	MOVLW      85
0x00DF	0x0080      	MOVWF      INDF
;maze001.c,147 :: 		short_done=1;
0x00E0	0x3001      	MOVLW      1
0x00E1	0x00D8      	MOVWF      short_path_short_done_L0
0x00E2	0x3000      	MOVLW      0
0x00E3	0x00D9      	MOVWF      short_path_short_done_L0+1
;maze001.c,148 :: 		}
L_short_path54:
;maze001.c,149 :: 		if(di[path]-3=='L' && di[path]-1=='S'&&short_done==0)   //   LUS=R
0x00E4	0x0822      	MOVF       _path, 0
0x00E5	0x3E24      	ADDLW      _di
0x00E6	0x0084      	MOVWF      FSR
0x00E7	0x3003      	MOVLW      3
0x00E8	0x0200      	SUBWF      INDF, 0
0x00E9	0x00F1      	MOVWF      R1
0x00EA	0x01F2      	CLRF       R1+1
0x00EB	0x1C03      	BTFSS      STATUS, 0
0x00EC	0x03F2      	DECF       R1+1, 1
0x00ED	0x3000      	MOVLW      0
0x00EE	0x0672      	XORWF      R1+1, 0
0x00EF	0x1D03      	BTFSS      STATUS, 2
0x00F0	0x28F3      	GOTO       L__short_path107
0x00F1	0x304C      	MOVLW      76
0x00F2	0x0671      	XORWF      R1, 0
L__short_path107:
0x00F3	0x1D03      	BTFSS      STATUS, 2
0x00F4	0x2923      	GOTO       L_short_path57
0x00F5	0x0822      	MOVF       _path, 0
0x00F6	0x3E24      	ADDLW      _di
0x00F7	0x0084      	MOVWF      FSR
0x00F8	0x3001      	MOVLW      1
0x00F9	0x0200      	SUBWF      INDF, 0
0x00FA	0x00F1      	MOVWF      R1
0x00FB	0x01F2      	CLRF       R1+1
0x00FC	0x1C03      	BTFSS      STATUS, 0
0x00FD	0x03F2      	DECF       R1+1, 1
0x00FE	0x3000      	MOVLW      0
0x00FF	0x0672      	XORWF      R1+1, 0
0x0100	0x1D03      	BTFSS      STATUS, 2
0x0101	0x2904      	GOTO       L__short_path108
0x0102	0x3053      	MOVLW      83
0x0103	0x0671      	XORWF      R1, 0
L__short_path108:
0x0104	0x1D03      	BTFSS      STATUS, 2
0x0105	0x2923      	GOTO       L_short_path57
0x0106	0x3000      	MOVLW      0
0x0107	0x0659      	XORWF      short_path_short_done_L0+1, 0
0x0108	0x1D03      	BTFSS      STATUS, 2
0x0109	0x290C      	GOTO       L__short_path109
0x010A	0x3000      	MOVLW      0
0x010B	0x0658      	XORWF      short_path_short_done_L0, 0
L__short_path109:
0x010C	0x1D03      	BTFSS      STATUS, 2
0x010D	0x2923      	GOTO       L_short_path57
L__short_path92:
;maze001.c,151 :: 		path-=3;
0x010E	0x3003      	MOVLW      3
0x010F	0x0222      	SUBWF      _path, 0
0x0110	0x00F0      	MOVWF      R0
0x0111	0x3000      	MOVLW      0
0x0112	0x1C03      	BTFSS      STATUS, 0
0x0113	0x3E01      	ADDLW      1
0x0114	0x0223      	SUBWF      _path+1, 0
0x0115	0x00F1      	MOVWF      R0+1
0x0116	0x0870      	MOVF       R0, 0
0x0117	0x00A2      	MOVWF      _path
0x0118	0x0871      	MOVF       R0+1, 0
0x0119	0x00A3      	MOVWF      _path+1
;maze001.c,152 :: 		di[path]='R';
0x011A	0x0870      	MOVF       R0, 0
0x011B	0x3E24      	ADDLW      _di
0x011C	0x0084      	MOVWF      FSR
0x011D	0x3052      	MOVLW      82
0x011E	0x0080      	MOVWF      INDF
;maze001.c,153 :: 		short_done=1;
0x011F	0x3001      	MOVLW      1
0x0120	0x00D8      	MOVWF      short_path_short_done_L0
0x0121	0x3000      	MOVLW      0
0x0122	0x00D9      	MOVWF      short_path_short_done_L0+1
;maze001.c,154 :: 		}
L_short_path57:
;maze001.c,155 :: 		if(di[path]-3=='R' && di[path]-1=='L'&&short_done==0)     //RUL=U
0x0123	0x0822      	MOVF       _path, 0
0x0124	0x3E24      	ADDLW      _di
0x0125	0x0084      	MOVWF      FSR
0x0126	0x3003      	MOVLW      3
0x0127	0x0200      	SUBWF      INDF, 0
0x0128	0x00F1      	MOVWF      R1
0x0129	0x01F2      	CLRF       R1+1
0x012A	0x1C03      	BTFSS      STATUS, 0
0x012B	0x03F2      	DECF       R1+1, 1
0x012C	0x3000      	MOVLW      0
0x012D	0x0672      	XORWF      R1+1, 0
0x012E	0x1D03      	BTFSS      STATUS, 2
0x012F	0x2932      	GOTO       L__short_path110
0x0130	0x3052      	MOVLW      82
0x0131	0x0671      	XORWF      R1, 0
L__short_path110:
0x0132	0x1D03      	BTFSS      STATUS, 2
0x0133	0x2962      	GOTO       L_short_path60
0x0134	0x0822      	MOVF       _path, 0
0x0135	0x3E24      	ADDLW      _di
0x0136	0x0084      	MOVWF      FSR
0x0137	0x3001      	MOVLW      1
0x0138	0x0200      	SUBWF      INDF, 0
0x0139	0x00F1      	MOVWF      R1
0x013A	0x01F2      	CLRF       R1+1
0x013B	0x1C03      	BTFSS      STATUS, 0
0x013C	0x03F2      	DECF       R1+1, 1
0x013D	0x3000      	MOVLW      0
0x013E	0x0672      	XORWF      R1+1, 0
0x013F	0x1D03      	BTFSS      STATUS, 2
0x0140	0x2943      	GOTO       L__short_path111
0x0141	0x304C      	MOVLW      76
0x0142	0x0671      	XORWF      R1, 0
L__short_path111:
0x0143	0x1D03      	BTFSS      STATUS, 2
0x0144	0x2962      	GOTO       L_short_path60
0x0145	0x3000      	MOVLW      0
0x0146	0x0659      	XORWF      short_path_short_done_L0+1, 0
0x0147	0x1D03      	BTFSS      STATUS, 2
0x0148	0x294B      	GOTO       L__short_path112
0x0149	0x3000      	MOVLW      0
0x014A	0x0658      	XORWF      short_path_short_done_L0, 0
L__short_path112:
0x014B	0x1D03      	BTFSS      STATUS, 2
0x014C	0x2962      	GOTO       L_short_path60
L__short_path91:
;maze001.c,157 :: 		path-=3;
0x014D	0x3003      	MOVLW      3
0x014E	0x0222      	SUBWF      _path, 0
0x014F	0x00F0      	MOVWF      R0
0x0150	0x3000      	MOVLW      0
0x0151	0x1C03      	BTFSS      STATUS, 0
0x0152	0x3E01      	ADDLW      1
0x0153	0x0223      	SUBWF      _path+1, 0
0x0154	0x00F1      	MOVWF      R0+1
0x0155	0x0870      	MOVF       R0, 0
0x0156	0x00A2      	MOVWF      _path
0x0157	0x0871      	MOVF       R0+1, 0
0x0158	0x00A3      	MOVWF      _path+1
;maze001.c,158 :: 		di[path]='U';
0x0159	0x0870      	MOVF       R0, 0
0x015A	0x3E24      	ADDLW      _di
0x015B	0x0084      	MOVWF      FSR
0x015C	0x3055      	MOVLW      85
0x015D	0x0080      	MOVWF      INDF
;maze001.c,159 :: 		short_done=1;
0x015E	0x3001      	MOVLW      1
0x015F	0x00D8      	MOVWF      short_path_short_done_L0
0x0160	0x3000      	MOVLW      0
0x0161	0x00D9      	MOVWF      short_path_short_done_L0+1
;maze001.c,160 :: 		}
L_short_path60:
;maze001.c,161 :: 		if(di[path]-3=='S' && di[path]-1=='L'&&short_done==0)         //SUL=R
0x0162	0x0822      	MOVF       _path, 0
0x0163	0x3E24      	ADDLW      _di
0x0164	0x0084      	MOVWF      FSR
0x0165	0x3003      	MOVLW      3
0x0166	0x0200      	SUBWF      INDF, 0
0x0167	0x00F1      	MOVWF      R1
0x0168	0x01F2      	CLRF       R1+1
0x0169	0x1C03      	BTFSS      STATUS, 0
0x016A	0x03F2      	DECF       R1+1, 1
0x016B	0x3000      	MOVLW      0
0x016C	0x0672      	XORWF      R1+1, 0
0x016D	0x1D03      	BTFSS      STATUS, 2
0x016E	0x2971      	GOTO       L__short_path113
0x016F	0x3053      	MOVLW      83
0x0170	0x0671      	XORWF      R1, 0
L__short_path113:
0x0171	0x1D03      	BTFSS      STATUS, 2
0x0172	0x29A1      	GOTO       L_short_path63
0x0173	0x0822      	MOVF       _path, 0
0x0174	0x3E24      	ADDLW      _di
0x0175	0x0084      	MOVWF      FSR
0x0176	0x3001      	MOVLW      1
0x0177	0x0200      	SUBWF      INDF, 0
0x0178	0x00F1      	MOVWF      R1
0x0179	0x01F2      	CLRF       R1+1
0x017A	0x1C03      	BTFSS      STATUS, 0
0x017B	0x03F2      	DECF       R1+1, 1
0x017C	0x3000      	MOVLW      0
0x017D	0x0672      	XORWF      R1+1, 0
0x017E	0x1D03      	BTFSS      STATUS, 2
0x017F	0x2982      	GOTO       L__short_path114
0x0180	0x304C      	MOVLW      76
0x0181	0x0671      	XORWF      R1, 0
L__short_path114:
0x0182	0x1D03      	BTFSS      STATUS, 2
0x0183	0x29A1      	GOTO       L_short_path63
0x0184	0x3000      	MOVLW      0
0x0185	0x0659      	XORWF      short_path_short_done_L0+1, 0
0x0186	0x1D03      	BTFSS      STATUS, 2
0x0187	0x298A      	GOTO       L__short_path115
0x0188	0x3000      	MOVLW      0
0x0189	0x0658      	XORWF      short_path_short_done_L0, 0
L__short_path115:
0x018A	0x1D03      	BTFSS      STATUS, 2
0x018B	0x29A1      	GOTO       L_short_path63
L__short_path90:
;maze001.c,163 :: 		path-=3;
0x018C	0x3003      	MOVLW      3
0x018D	0x0222      	SUBWF      _path, 0
0x018E	0x00F0      	MOVWF      R0
0x018F	0x3000      	MOVLW      0
0x0190	0x1C03      	BTFSS      STATUS, 0
0x0191	0x3E01      	ADDLW      1
0x0192	0x0223      	SUBWF      _path+1, 0
0x0193	0x00F1      	MOVWF      R0+1
0x0194	0x0870      	MOVF       R0, 0
0x0195	0x00A2      	MOVWF      _path
0x0196	0x0871      	MOVF       R0+1, 0
0x0197	0x00A3      	MOVWF      _path+1
;maze001.c,164 :: 		di[path]='R';
0x0198	0x0870      	MOVF       R0, 0
0x0199	0x3E24      	ADDLW      _di
0x019A	0x0084      	MOVWF      FSR
0x019B	0x3052      	MOVLW      82
0x019C	0x0080      	MOVWF      INDF
;maze001.c,165 :: 		short_done=1;
0x019D	0x3001      	MOVLW      1
0x019E	0x00D8      	MOVWF      short_path_short_done_L0
0x019F	0x3000      	MOVLW      0
0x01A0	0x00D9      	MOVWF      short_path_short_done_L0+1
;maze001.c,166 :: 		}
L_short_path63:
;maze001.c,167 :: 		if(di[path]-3=='S' && di[path]-1=='S'&&short_done==0)         //SUS=U
0x01A1	0x0822      	MOVF       _path, 0
0x01A2	0x3E24      	ADDLW      _di
0x01A3	0x0084      	MOVWF      FSR
0x01A4	0x3003      	MOVLW      3
0x01A5	0x0200      	SUBWF      INDF, 0
0x01A6	0x00F1      	MOVWF      R1
0x01A7	0x01F2      	CLRF       R1+1
0x01A8	0x1C03      	BTFSS      STATUS, 0
0x01A9	0x03F2      	DECF       R1+1, 1
0x01AA	0x3000      	MOVLW      0
0x01AB	0x0672      	XORWF      R1+1, 0
0x01AC	0x1D03      	BTFSS      STATUS, 2
0x01AD	0x29B0      	GOTO       L__short_path116
0x01AE	0x3053      	MOVLW      83
0x01AF	0x0671      	XORWF      R1, 0
L__short_path116:
0x01B0	0x1D03      	BTFSS      STATUS, 2
0x01B1	0x29E0      	GOTO       L_short_path66
0x01B2	0x0822      	MOVF       _path, 0
0x01B3	0x3E24      	ADDLW      _di
0x01B4	0x0084      	MOVWF      FSR
0x01B5	0x3001      	MOVLW      1
0x01B6	0x0200      	SUBWF      INDF, 0
0x01B7	0x00F1      	MOVWF      R1
0x01B8	0x01F2      	CLRF       R1+1
0x01B9	0x1C03      	BTFSS      STATUS, 0
0x01BA	0x03F2      	DECF       R1+1, 1
0x01BB	0x3000      	MOVLW      0
0x01BC	0x0672      	XORWF      R1+1, 0
0x01BD	0x1D03      	BTFSS      STATUS, 2
0x01BE	0x29C1      	GOTO       L__short_path117
0x01BF	0x3053      	MOVLW      83
0x01C0	0x0671      	XORWF      R1, 0
L__short_path117:
0x01C1	0x1D03      	BTFSS      STATUS, 2
0x01C2	0x29E0      	GOTO       L_short_path66
0x01C3	0x3000      	MOVLW      0
0x01C4	0x0659      	XORWF      short_path_short_done_L0+1, 0
0x01C5	0x1D03      	BTFSS      STATUS, 2
0x01C6	0x29C9      	GOTO       L__short_path118
0x01C7	0x3000      	MOVLW      0
0x01C8	0x0658      	XORWF      short_path_short_done_L0, 0
L__short_path118:
0x01C9	0x1D03      	BTFSS      STATUS, 2
0x01CA	0x29E0      	GOTO       L_short_path66
L__short_path89:
;maze001.c,169 :: 		path-=3;
0x01CB	0x3003      	MOVLW      3
0x01CC	0x0222      	SUBWF      _path, 0
0x01CD	0x00F0      	MOVWF      R0
0x01CE	0x3000      	MOVLW      0
0x01CF	0x1C03      	BTFSS      STATUS, 0
0x01D0	0x3E01      	ADDLW      1
0x01D1	0x0223      	SUBWF      _path+1, 0
0x01D2	0x00F1      	MOVWF      R0+1
0x01D3	0x0870      	MOVF       R0, 0
0x01D4	0x00A2      	MOVWF      _path
0x01D5	0x0871      	MOVF       R0+1, 0
0x01D6	0x00A3      	MOVWF      _path+1
;maze001.c,170 :: 		di[path]='U';
0x01D7	0x0870      	MOVF       R0, 0
0x01D8	0x3E24      	ADDLW      _di
0x01D9	0x0084      	MOVWF      FSR
0x01DA	0x3055      	MOVLW      85
0x01DB	0x0080      	MOVWF      INDF
;maze001.c,171 :: 		short_done=1;
0x01DC	0x3001      	MOVLW      1
0x01DD	0x00D8      	MOVWF      short_path_short_done_L0
0x01DE	0x3000      	MOVLW      0
0x01DF	0x00D9      	MOVWF      short_path_short_done_L0+1
;maze001.c,172 :: 		}
L_short_path66:
;maze001.c,173 :: 		if(di[path]-3=='L' && di[path]-1=='L'&&short_done==0)           //LUL=S
0x01E0	0x0822      	MOVF       _path, 0
0x01E1	0x3E24      	ADDLW      _di
0x01E2	0x0084      	MOVWF      FSR
0x01E3	0x3003      	MOVLW      3
0x01E4	0x0200      	SUBWF      INDF, 0
0x01E5	0x00F1      	MOVWF      R1
0x01E6	0x01F2      	CLRF       R1+1
0x01E7	0x1C03      	BTFSS      STATUS, 0
0x01E8	0x03F2      	DECF       R1+1, 1
0x01E9	0x3000      	MOVLW      0
0x01EA	0x0672      	XORWF      R1+1, 0
0x01EB	0x1D03      	BTFSS      STATUS, 2
0x01EC	0x29EF      	GOTO       L__short_path119
0x01ED	0x304C      	MOVLW      76
0x01EE	0x0671      	XORWF      R1, 0
L__short_path119:
0x01EF	0x1D03      	BTFSS      STATUS, 2
0x01F0	0x2A1F      	GOTO       L_short_path69
0x01F1	0x0822      	MOVF       _path, 0
0x01F2	0x3E24      	ADDLW      _di
0x01F3	0x0084      	MOVWF      FSR
0x01F4	0x3001      	MOVLW      1
0x01F5	0x0200      	SUBWF      INDF, 0
0x01F6	0x00F1      	MOVWF      R1
0x01F7	0x01F2      	CLRF       R1+1
0x01F8	0x1C03      	BTFSS      STATUS, 0
0x01F9	0x03F2      	DECF       R1+1, 1
0x01FA	0x3000      	MOVLW      0
0x01FB	0x0672      	XORWF      R1+1, 0
0x01FC	0x1D03      	BTFSS      STATUS, 2
0x01FD	0x2A00      	GOTO       L__short_path120
0x01FE	0x304C      	MOVLW      76
0x01FF	0x0671      	XORWF      R1, 0
L__short_path120:
0x0200	0x1D03      	BTFSS      STATUS, 2
0x0201	0x2A1F      	GOTO       L_short_path69
0x0202	0x3000      	MOVLW      0
0x0203	0x0659      	XORWF      short_path_short_done_L0+1, 0
0x0204	0x1D03      	BTFSS      STATUS, 2
0x0205	0x2A08      	GOTO       L__short_path121
0x0206	0x3000      	MOVLW      0
0x0207	0x0658      	XORWF      short_path_short_done_L0, 0
L__short_path121:
0x0208	0x1D03      	BTFSS      STATUS, 2
0x0209	0x2A1F      	GOTO       L_short_path69
L__short_path88:
;maze001.c,175 :: 		path-=3;
0x020A	0x3003      	MOVLW      3
0x020B	0x0222      	SUBWF      _path, 0
0x020C	0x00F0      	MOVWF      R0
0x020D	0x3000      	MOVLW      0
0x020E	0x1C03      	BTFSS      STATUS, 0
0x020F	0x3E01      	ADDLW      1
0x0210	0x0223      	SUBWF      _path+1, 0
0x0211	0x00F1      	MOVWF      R0+1
0x0212	0x0870      	MOVF       R0, 0
0x0213	0x00A2      	MOVWF      _path
0x0214	0x0871      	MOVF       R0+1, 0
0x0215	0x00A3      	MOVWF      _path+1
;maze001.c,176 :: 		di[path]='S';
0x0216	0x0870      	MOVF       R0, 0
0x0217	0x3E24      	ADDLW      _di
0x0218	0x0084      	MOVWF      FSR
0x0219	0x3053      	MOVLW      83
0x021A	0x0080      	MOVWF      INDF
;maze001.c,177 :: 		short_done=1;
0x021B	0x3001      	MOVLW      1
0x021C	0x00D8      	MOVWF      short_path_short_done_L0
0x021D	0x3000      	MOVLW      0
0x021E	0x00D9      	MOVWF      short_path_short_done_L0+1
;maze001.c,178 :: 		}
L_short_path69:
;maze001.c,180 :: 		}
L_end_short_path:
0x021F	0x0008      	RETURN
; end of _short_path
_stop:
;maze001.c,119 :: 		stop()                             // stop and ready to go on shortest way
;maze001.c,121 :: 		di[path]='D' ;                   // done
0x0220	0x1283      	BCF        STATUS, 5
0x0221	0x1303      	BCF        STATUS, 6
0x0222	0x0822      	MOVF       _path, 0
0x0223	0x3E24      	ADDLW      _di
0x0224	0x0084      	MOVWF      FSR
0x0225	0x3044      	MOVLW      68
0x0226	0x0080      	MOVWF      INDF
;maze001.c,122 :: 		portd=0b00000000;
0x0227	0x0188      	CLRF       PORTD
;maze001.c,123 :: 		delay_ms(5000);                  //wait 5 sec to replace again in the start
0x0228	0x307F      	MOVLW      127
0x0229	0x00FB      	MOVWF      R11
0x022A	0x30D4      	MOVLW      212
0x022B	0x00FC      	MOVWF      R12
0x022C	0x3031      	MOVLW      49
0x022D	0x00FD      	MOVWF      R13
L_stop47:
0x022E	0x0BFD      	DECFSZ     R13, 1
0x022F	0x2A2E      	GOTO       L_stop47
0x0230	0x0BFC      	DECFSZ     R12, 1
0x0231	0x2A2E      	GOTO       L_stop47
0x0232	0x0BFB      	DECFSZ     R11, 1
0x0233	0x2A2E      	GOTO       L_stop47
0x0234	0x0000      	NOP
0x0235	0x0000      	NOP
;maze001.c,124 :: 		replay();
0x0236	0x203C      	CALL       _replay
;maze001.c,125 :: 		}
L_end_stop:
0x0237	0x0008      	RETURN
; end of _stop
_left_turn:
;maze001.c,102 :: 		left_turn()
;maze001.c,104 :: 		do {portd=0b00000001 ;              // left
L_left_turn42:
0x0238	0x3001      	MOVLW      1
0x0239	0x1283      	BCF        STATUS, 5
0x023A	0x1303      	BCF        STATUS, 6
0x023B	0x0088      	MOVWF      PORTD
;maze001.c,105 :: 		delay_ms(10);
0x023C	0x3041      	MOVLW      65
0x023D	0x00FC      	MOVWF      R12
0x023E	0x30EE      	MOVLW      238
0x023F	0x00FD      	MOVWF      R13
L_left_turn45:
0x0240	0x0BFD      	DECFSZ     R13, 1
0x0241	0x2A40      	GOTO       L_left_turn45
0x0242	0x0BFC      	DECFSZ     R12, 1
0x0243	0x2A40      	GOTO       L_left_turn45
0x0244	0x0000      	NOP
;maze001.c,106 :: 		} while(m==0);
0x0245	0x1D06      	BTFSS      PORTB, 2
0x0246	0x2A38      	GOTO       L_left_turn42
;maze001.c,107 :: 		di[path]='L' ;                   // enter L
0x0247	0x0822      	MOVF       _path, 0
0x0248	0x3E24      	ADDLW      _di
0x0249	0x0084      	MOVWF      FSR
0x024A	0x304C      	MOVLW      76
0x024B	0x0080      	MOVWF      INDF
;maze001.c,108 :: 		path++;
0x024C	0x0AA2      	INCF       _path, 1
0x024D	0x1903      	BTFSC      STATUS, 2
0x024E	0x0AA3      	INCF       _path+1, 1
;maze001.c,109 :: 		short_path();
0x024F	0x20A9      	CALL       _short_path
;maze001.c,110 :: 		}
L_end_left_turn:
0x0250	0x0008      	RETURN
; end of _left_turn
_u_turn:
;maze001.c,126 :: 		u_turn()
;maze001.c,128 :: 		do {portd=0b00001001 ;              // left U turn
L_u_turn48:
0x0251	0x3009      	MOVLW      9
0x0252	0x1283      	BCF        STATUS, 5
0x0253	0x1303      	BCF        STATUS, 6
0x0254	0x0088      	MOVWF      PORTD
;maze001.c,129 :: 		delay_ms(10);
0x0255	0x3041      	MOVLW      65
0x0256	0x00FC      	MOVWF      R12
0x0257	0x30EE      	MOVLW      238
0x0258	0x00FD      	MOVWF      R13
L_u_turn51:
0x0259	0x0BFD      	DECFSZ     R13, 1
0x025A	0x2A59      	GOTO       L_u_turn51
0x025B	0x0BFC      	DECFSZ     R12, 1
0x025C	0x2A59      	GOTO       L_u_turn51
0x025D	0x0000      	NOP
;maze001.c,130 :: 		} while(m==0);
0x025E	0x1D06      	BTFSS      PORTB, 2
0x025F	0x2A51      	GOTO       L_u_turn48
;maze001.c,131 :: 		di[path]='U' ;               // enter U
0x0260	0x0822      	MOVF       _path, 0
0x0261	0x3E24      	ADDLW      _di
0x0262	0x0084      	MOVWF      FSR
0x0263	0x3055      	MOVLW      85
0x0264	0x0080      	MOVWF      INDF
;maze001.c,132 :: 		path++;
0x0265	0x0AA2      	INCF       _path, 1
0x0266	0x1903      	BTFSC      STATUS, 2
0x0267	0x0AA3      	INCF       _path+1, 1
;maze001.c,133 :: 		short_path();
0x0268	0x20A9      	CALL       _short_path
;maze001.c,134 :: 		}
L_end_u_turn:
0x0269	0x0008      	RETURN
; end of _u_turn
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x026A	0x2035      	CALL       _____DoICP
0x026B	0x118A      	BCF        PCLATH, 3
0x026C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x026D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x026E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x026F	0x0AD6      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0270	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0271	0x0AD7      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0272	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0273	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0274	0x2A6A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0275	0x0008      	RETURN
; end of ___CC2DW
_straight:
;maze001.c,111 :: 		straight()
;maze001.c,113 :: 		portd=0b00000101 ;              // forward
0x0276	0x3005      	MOVLW      5
0x0277	0x1283      	BCF        STATUS, 5
0x0278	0x1303      	BCF        STATUS, 6
0x0279	0x0088      	MOVWF      PORTD
;maze001.c,114 :: 		delay_ms(10);
0x027A	0x3041      	MOVLW      65
0x027B	0x00FC      	MOVWF      R12
0x027C	0x30EE      	MOVLW      238
0x027D	0x00FD      	MOVWF      R13
L_straight46:
0x027E	0x0BFD      	DECFSZ     R13, 1
0x027F	0x2A7E      	GOTO       L_straight46
0x0280	0x0BFC      	DECFSZ     R12, 1
0x0281	0x2A7E      	GOTO       L_straight46
0x0282	0x0000      	NOP
;maze001.c,115 :: 		di[path]='S' ;                    // enter S
0x0283	0x0822      	MOVF       _path, 0
0x0284	0x3E24      	ADDLW      _di
0x0285	0x0084      	MOVWF      FSR
0x0286	0x3053      	MOVLW      83
0x0287	0x0080      	MOVWF      INDF
;maze001.c,116 :: 		path++;
0x0288	0x0AA2      	INCF       _path, 1
0x0289	0x1903      	BTFSC      STATUS, 2
0x028A	0x0AA3      	INCF       _path+1, 1
;maze001.c,117 :: 		short_path();
0x028B	0x20A9      	CALL       _short_path
;maze001.c,118 :: 		}
L_end_straight:
0x028C	0x0008      	RETURN
; end of _straight
_main:
0x028D	0x1283      	BCF        STATUS, 5
0x028E	0x1303      	BCF        STATUS, 6
0x028F	0x01A0      	CLRF       _path1
0x0290	0x01A1      	CLRF       33
;maze001.c,20 :: 		void main()
;maze001.c,23 :: 		ansel =0;
0x0291	0x1683      	BSF        STATUS, 5
0x0292	0x1703      	BSF        STATUS, 6
0x0293	0x0188      	CLRF       ANSEL
;maze001.c,24 :: 		anselh=0;
0x0294	0x0189      	CLRF       ANSELH
;maze001.c,25 :: 		C1ON_bit = 0;                                  // Disable comparators
0x0295	0x1283      	BCF        STATUS, 5
0x0296	0x1387      	BCF        C1ON_bit, BitPos(C1ON_bit+0)
;maze001.c,26 :: 		C2ON_bit = 0;                                  // Disable comparators
0x0297	0x1388      	BCF        C2ON_bit, BitPos(C2ON_bit+0)
;maze001.c,27 :: 		trisb=1;
0x0298	0x3001      	MOVLW      1
0x0299	0x1683      	BSF        STATUS, 5
0x029A	0x1303      	BCF        STATUS, 6
0x029B	0x0086      	MOVWF      TRISB
;maze001.c,28 :: 		trisd=0;
0x029C	0x0188      	CLRF       TRISD
;maze001.c,29 :: 		option_reg.f7=0;
0x029D	0x1381      	BCF        OPTION_REG, 7
;maze001.c,30 :: 		while (1)
L_main0:
;maze001.c,32 :: 		if ( ll==1&&l==1 &&m==0 && r ==1 && rr ==1 )              // condition        1  1  0  1  1
0x029E	0x1283      	BCF        STATUS, 5
0x029F	0x1E06      	BTFSS      PORTB, 4
0x02A0	0x2AAB      	GOTO       L_main4
0x02A1	0x1D86      	BTFSS      PORTB, 3
0x02A2	0x2AAB      	GOTO       L_main4
0x02A3	0x1906      	BTFSC      PORTB, 2
0x02A4	0x2AAB      	GOTO       L_main4
0x02A5	0x1C86      	BTFSS      PORTB, 1
0x02A6	0x2AAB      	GOTO       L_main4
0x02A7	0x1C06      	BTFSS      PORTB, 0
0x02A8	0x2AAB      	GOTO       L_main4
L__main87:
;maze001.c,34 :: 		forward () ;
0x02A9	0x2027      	CALL       _forward
;maze001.c,35 :: 		}
0x02AA	0x2B01      	GOTO       L_main5
L_main4:
;maze001.c,36 :: 		else if  ( ll == 1 && l== 1 &&m==0 && r ==0 && rr ==0 )                     //    r8 or state
0x02AB	0x1E06      	BTFSS      PORTB, 4
0x02AC	0x2AC4      	GOTO       L_main8
0x02AD	0x1D86      	BTFSS      PORTB, 3
0x02AE	0x2AC4      	GOTO       L_main8
0x02AF	0x1906      	BTFSC      PORTB, 2
0x02B0	0x2AC4      	GOTO       L_main8
0x02B1	0x1886      	BTFSC      PORTB, 1
0x02B2	0x2AC4      	GOTO       L_main8
0x02B3	0x1806      	BTFSC      PORTB, 0
0x02B4	0x2AC4      	GOTO       L_main8
L__main86:
;maze001.c,38 :: 		forward () ;
0x02B5	0x2027      	CALL       _forward
;maze001.c,39 :: 		if ( ll==1&&l==1 &&m==0 && r ==1 && rr ==1 )                   // if straigt possible go straigt
0x02B6	0x1E06      	BTFSS      PORTB, 4
0x02B7	0x2AC2      	GOTO       L_main11
0x02B8	0x1D86      	BTFSS      PORTB, 3
0x02B9	0x2AC2      	GOTO       L_main11
0x02BA	0x1906      	BTFSC      PORTB, 2
0x02BB	0x2AC2      	GOTO       L_main11
0x02BC	0x1C86      	BTFSS      PORTB, 1
0x02BD	0x2AC2      	GOTO       L_main11
0x02BE	0x1C06      	BTFSS      PORTB, 0
0x02BF	0x2AC2      	GOTO       L_main11
L__main85:
;maze001.c,41 :: 		straight ();
0x02C0	0x2276      	CALL       _straight
;maze001.c,42 :: 		}
0x02C1	0x2AC3      	GOTO       L_main12
L_main11:
;maze001.c,44 :: 		right ();
0x02C2	0x2003      	CALL       _right
;maze001.c,45 :: 		}
L_main12:
;maze001.c,46 :: 		}
0x02C3	0x2B01      	GOTO       L_main13
L_main8:
;maze001.c,47 :: 		else if   ( ll == 0 && l== 0 &&m==0 && r ==1 && rr ==1 )                    //    default  left or left turn   checking
0x02C4	0x1A06      	BTFSC      PORTB, 4
0x02C5	0x2ADD      	GOTO       L_main16
0x02C6	0x1986      	BTFSC      PORTB, 3
0x02C7	0x2ADD      	GOTO       L_main16
0x02C8	0x1906      	BTFSC      PORTB, 2
0x02C9	0x2ADD      	GOTO       L_main16
0x02CA	0x1C86      	BTFSS      PORTB, 1
0x02CB	0x2ADD      	GOTO       L_main16
0x02CC	0x1C06      	BTFSS      PORTB, 0
0x02CD	0x2ADD      	GOTO       L_main16
L__main84:
;maze001.c,49 :: 		forward();
0x02CE	0x2027      	CALL       _forward
;maze001.c,51 :: 		if(ll == 0 && l== 0 &&m==1 && r ==0 && rr ==0)                   // if straight possible then turn left
0x02CF	0x1A06      	BTFSC      PORTB, 4
0x02D0	0x2ADB      	GOTO       L_main19
0x02D1	0x1986      	BTFSC      PORTB, 3
0x02D2	0x2ADB      	GOTO       L_main19
0x02D3	0x1D06      	BTFSS      PORTB, 2
0x02D4	0x2ADB      	GOTO       L_main19
0x02D5	0x1886      	BTFSC      PORTB, 1
0x02D6	0x2ADB      	GOTO       L_main19
0x02D7	0x1806      	BTFSC      PORTB, 0
0x02D8	0x2ADB      	GOTO       L_main19
L__main83:
;maze001.c,53 :: 		left_turn () ;
0x02D9	0x2238      	CALL       _left_turn
;maze001.c,54 :: 		}
0x02DA	0x2ADC      	GOTO       L_main20
L_main19:
;maze001.c,57 :: 		left();
0x02DB	0x2017      	CALL       _left
;maze001.c,58 :: 		}
L_main20:
;maze001.c,59 :: 		}
0x02DC	0x2B01      	GOTO       L_main21
L_main16:
;maze001.c,60 :: 		else if  (  ll == 0 && l== 0 &&m==0 && r ==0 && rr ==0 )            // T or cross or complete
0x02DD	0x1A06      	BTFSC      PORTB, 4
0x02DE	0x2AF6      	GOTO       L_main24
0x02DF	0x1986      	BTFSC      PORTB, 3
0x02E0	0x2AF6      	GOTO       L_main24
0x02E1	0x1906      	BTFSC      PORTB, 2
0x02E2	0x2AF6      	GOTO       L_main24
0x02E3	0x1886      	BTFSC      PORTB, 1
0x02E4	0x2AF6      	GOTO       L_main24
0x02E5	0x1806      	BTFSC      PORTB, 0
0x02E6	0x2AF6      	GOTO       L_main24
L__main82:
;maze001.c,62 :: 		forward();
0x02E7	0x2027      	CALL       _forward
;maze001.c,63 :: 		if(ll == 0 && l== 0 &&m==0 && r ==0 && rr ==0 )                 // all black
0x02E8	0x1A06      	BTFSC      PORTB, 4
0x02E9	0x2AF4      	GOTO       L_main27
0x02EA	0x1986      	BTFSC      PORTB, 3
0x02EB	0x2AF4      	GOTO       L_main27
0x02EC	0x1906      	BTFSC      PORTB, 2
0x02ED	0x2AF4      	GOTO       L_main27
0x02EE	0x1886      	BTFSC      PORTB, 1
0x02EF	0x2AF4      	GOTO       L_main27
0x02F0	0x1806      	BTFSC      PORTB, 0
0x02F1	0x2AF4      	GOTO       L_main27
L__main81:
;maze001.c,65 :: 		stop();                                          // solve complete ready to go by shortest way
0x02F2	0x2220      	CALL       _stop
;maze001.c,66 :: 		}
0x02F3	0x2AF5      	GOTO       L_main28
L_main27:
;maze001.c,73 :: 		left_turn();
0x02F4	0x2238      	CALL       _left_turn
;maze001.c,74 :: 		}
L_main28:
;maze001.c,75 :: 		}
0x02F5	0x2B01      	GOTO       L_main29
L_main24:
;maze001.c,76 :: 		else if (ll ==1 && l==1 && m==1 && r ==1 && rr ==1 )
0x02F6	0x1E06      	BTFSS      PORTB, 4
0x02F7	0x2B01      	GOTO       L_main32
0x02F8	0x1D86      	BTFSS      PORTB, 3
0x02F9	0x2B01      	GOTO       L_main32
0x02FA	0x1D06      	BTFSS      PORTB, 2
0x02FB	0x2B01      	GOTO       L_main32
0x02FC	0x1C86      	BTFSS      PORTB, 1
0x02FD	0x2B01      	GOTO       L_main32
0x02FE	0x1C06      	BTFSS      PORTB, 0
0x02FF	0x2B01      	GOTO       L_main32
L__main80:
;maze001.c,78 :: 		u_turn();
0x0300	0x2251      	CALL       _u_turn
;maze001.c,79 :: 		}
L_main32:
L_main29:
L_main21:
L_main13:
L_main5:
;maze001.c,80 :: 		}
0x0301	0x2A9E      	GOTO       L_main0
;maze001.c,81 :: 		}
L_end_main:
0x0302	0x2B02      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [16]    _right
0x0013       [4]    _done
0x0017      [16]    _left
0x0027      [14]    _forward
0x0035       [7]    _____DoICP
0x003C     [109]    _replay
0x00A9     [375]    _short_path
0x0220      [24]    _stop
0x0238      [25]    _left_turn
0x0251      [25]    _u_turn
0x026A      [12]    ___CC2DW
0x0276      [23]    _straight
0x028D     [118]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0020       [2]    _path1
0x0022       [2]    _path
0x0024      [50]    _di
0x0056       [2]    ___DoICPAddr
0x0058       [2]    short_path_short_done_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
0x0088       [1]    TRISD
0x0107       [0]    C1ON_bit
0x0108       [0]    C2ON_bit
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_forward33
  L_right34
  L_right35
  L_right36
  L_right37
  L_left38
  L_left39
  L_left40
  L_left41
  L_left_turn42
  L_left_turn43
  L_left_turn44
  L_left_turn45
  L_straight46
  L_stop47
  L_u_turn48
  L_u_turn49
  L_u_turn50
  L_u_turn51
  L_short_path52
  L_short_path53
  L_short_path54
  L_short_path55
  L_short_path56
  L_short_path57
  L_short_path58
  L_short_path59
  L_short_path60
  L_short_path61
  L_short_path62
  L_short_path63
  L_short_path64
  L_short_path65
  L_short_path66
  L_short_path67
  L_short_path68
  L_short_path69
  L_replay70
  L_replay71
  L_replay72
  L_replay73
  L_replay74
  L_replay75
  L_replay76
  L_replay77
  L_replay78
  L_replay79
  L__main80
  L__main81
  L__main82
  L__main83
  L__main84
  L__main85
  L__main86
  L__main87
  L__short_path88
  L__short_path89
  L__short_path90
  L__short_path91
  L__short_path92
  L__short_path93
  L__replay94
  L_end_main
  _main
  L_end_forward
  _forward
  L_end_right
  _right
  L_end_left
  _left
  L_end_left_turn
  _left_turn
  L_end_straight
  _straight
  L_end_stop
  _stop
  L_end_u_turn
  _u_turn
  L_end_done
  _done
  L_end_short_path
  _short_path
  L__short_path105
  L__short_path106
  L__short_path107
  L__short_path108
  L__short_path109
  L__short_path110
  L__short_path111
  L__short_path112
  L__short_path113
  L__short_path114
  L__short_path115
  L__short_path116
  L__short_path117
  L__short_path118
  L__short_path119
  L__short_path120
  L__short_path121
  L_end_replay
  _replay
  L__replay123
  L__replay124
  L__replay125
  L__replay126
  L__replay127
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
